// This module is used by dgeni to produce the angular2.d.ts file.
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
// Re-export everything we export to the application runtime
__export(require('./angular2'));
// Horrible hack. See
// https://docs.google.com/document/d/1nNebWTiLzz5ePcit_bjZPtaiSIFU4EsQKUlX7LX0c0A/edit
// Exports needed to make angular2.d.ts work,
// because these symbols are dependencies of other exports but are not otherwise exported.
// This should be cleaned up in one of two ways:
// 1) if the symbol is intended to be part of the public API, then re-export somewhere else
// 2) if the symbol should be omitted from the public API, then the class exposing it should
//    not be exported, or should avoid exposing the symbol.
var abstract_change_detector_1 = require('./src/change_detection/abstract_change_detector');
exports.AbstractChangeDetector = abstract_change_detector_1.AbstractChangeDetector;
var proto_record_1 = require('./src/change_detection/proto_record');
exports.ProtoRecord = proto_record_1.ProtoRecord;
__export(require('./src/core/compiler/element_injector'));
// FIXME: this is a workaround for https://github.com/angular/angular/issues/2356
// We export the Directive *annotation* instead of the *decorator*.
// But it breaks the build.
var annotations_1 = require('./src/core/annotations_impl/annotations');
exports.Directive = annotations_1.Directive;
exports.LifecycleEvent = annotations_1.LifecycleEvent;
var control_container_1 = require('./src/forms/directives/control_container');
exports.ControlContainer = control_container_1.ControlContainer;
var annotations_impl_1 = require('./src/di/annotations_impl');
exports.Injectable = annotations_impl_1.Injectable;
var base_query_list_1 = require('./src/core/compiler/base_query_list');
exports.BaseQueryList = base_query_list_1.BaseQueryList;
var view_1 = require('./src/core/compiler/view');
exports.AppProtoView = view_1.AppProtoView;
exports.AppView = view_1.AppView;
exports.AppViewContainer = view_1.AppViewContainer;
__export(require('./src/change_detection/parser/ast'));
var visibility_1 = require('./src/core/annotations_impl/visibility');
exports.Visibility = visibility_1.Visibility;
var view_manager_1 = require('./src/core/compiler/view_manager');
exports.AppViewManager = view_manager_1.AppViewManager;
exports.__esModule = true;
//# sourceMappingURL=angular2.api.js.map