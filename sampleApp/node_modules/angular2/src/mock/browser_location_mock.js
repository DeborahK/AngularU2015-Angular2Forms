var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);
        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);
        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);
    }
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var test_lib_1 = require('angular2/test_lib');
var lang_1 = require('angular2/src/facade/lang');
var async_1 = require('angular2/src/facade/async');
var collection_1 = require('angular2/src/facade/collection');
var browser_location_1 = require('angular2/src/router/browser_location');
var DummyBrowserLocation = (function (_super) {
    __extends(DummyBrowserLocation, _super);
    function DummyBrowserLocation() {
        _super.call(this);
        this.internalBaseHref = '/';
        this.internalPath = '/';
        this.internalTitle = '';
        this.urlChanges = collection_1.ListWrapper.create();
        this._subject = new async_1.EventEmitter();
    }
    DummyBrowserLocation.prototype.simulatePopState = function (url) {
        this.internalPath = url;
        async_1.ObservableWrapper.callNext(this._subject, null);
    };
    DummyBrowserLocation.prototype.path = function () { return this.internalPath; };
    DummyBrowserLocation.prototype.simulateUrlPop = function (pathname) {
        async_1.ObservableWrapper.callNext(this._subject, { 'url': pathname });
    };
    DummyBrowserLocation.prototype.pushState = function (ctx, title, url) {
        this.internalTitle = title;
        this.internalPath = url;
        collection_1.ListWrapper.push(this.urlChanges, url);
    };
    DummyBrowserLocation.prototype.forward = function () { throw new lang_1.BaseException('Not implemented yet!'); };
    DummyBrowserLocation.prototype.back = function () { throw new lang_1.BaseException('Not implemented yet!'); };
    DummyBrowserLocation.prototype.onPopState = function (fn) { async_1.ObservableWrapper.subscribe(this._subject, fn); };
    DummyBrowserLocation.prototype.getBaseHref = function () { return this.internalBaseHref; };
    DummyBrowserLocation.prototype.noSuchMethod = function (m) { return _super.prototype.noSuchMethod.call(this, m); };
    DummyBrowserLocation = __decorate([
        test_lib_1.proxy,
        lang_1.IMPLEMENTS(browser_location_1.BrowserLocation), 
        __metadata('design:paramtypes', [])
    ], DummyBrowserLocation);
    return DummyBrowserLocation;
})(test_lib_1.SpyObject);
exports.DummyBrowserLocation = DummyBrowserLocation;
exports.__esModule = true;
//# sourceMappingURL=browser_location_mock.js.map